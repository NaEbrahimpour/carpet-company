package carpet_company;
public class STRASSEN {
    
    public static int [][] multiply(int A[][], int B[][],int C[][])
    {
        for (int i = 0; i < A.length; i++)
        {
            for (int j = 0; j < A.length; j++)
            {
                C[i][j] = 0;
                for (int k = 0; k < A.length; k++)
                {
                    C[i][j] += A[i][k]*B[k][j];
                }
            }
        }
        return C;
    }
    static void strassen(int n,int A[][],int B[][],int C[][]){
        if(n==2){
            C[0][0]=(A[0][0]*B[0][0]) + (A[0][1]*B[1][0]);
            C[0][1]=(A[0][0]*B[0][1]) + (A[0][1]*B[1][1]);
            C[1][0]=(A[1][0]*B[0][0]) + (A[1][1]*B[1][0]);
            C[1][1]=(A[1][0]*B[0][1]) + (A[1][1]*B[1][1]);
        }
        else {
            int A11[][]=new int[n/2][n/2];
            int A12[][]=new int[n/2][n/2];
            int A21[][]=new int[n/2][n/2];
            int A22[][]=new int[n/2][n/2];

            int B11[][]=new int[n/2][n/2];
            int B12[][]=new int[n/2][n/2];
            int B21[][]=new int[n/2][n/2];
            int B22[][]=new int[n/2][n/2];

            int M1[][]=new int[n/2][n/2],M2[][]=new int[n/2][n/2],M3[][]=new int[n/2][n/2]
                    ,M4[][]=new int[n/2][n/2],M5[][]=new int[n/2][n/2],M6[][]=new int[n/2][n/2]
                    ,M7[][]=new int[n/2][n/2],C00[][],C01[][], C10[][],C11[][],i,j;
            for(i=0 ; i<n/2 ; i++)
                for(j=0 ; j<n/2 ; j++){
                    A11[i][j]=A[i][j];
                    A12[i][j]=A[i][j+n/2];
                    A21[i][j]=A[i+n/2][j];
                    A22[i][j]=A[i+n/2][j+n/2];

                    B11[i][j]=B[i][j];
                    B12[i][j]=B[i][j+n/2];
                    B21[i][j]=B[i+n/2][j];
                    B22[i][j]=B[i+n/2][j+n/2];
                }

            strassen(n/2, add(A11,A22,true), add(B11,B22,true), M1);
            strassen(n/2,add( A21, A22,true), B11 , M2);
            strassen(n/2, A11, add(B12,B22,false), M3);
            strassen(n/2, A22, add( B21, B11, false), M4);
            strassen(n/2,add( A11, A12, true) , B22, M5);
            strassen(n/2, add( A21, A11, false), add( B11, B12, true), M6);
            strassen(n/2, add( A12, A22, false), add( B21, B22, true), M7);

            C00=add(add(add( M1, M4, true), M5,false), M7,true);
            C01=add( M3, M5, true);
            C10=add(M2, M4, true);
            C11=add(add(add( M1, M3, true), M2,false), M6,true);
            for(i=0 ; i<C00.length ; i++)
                for(j=0 ; j<C00.length ; j++){
                    C[i][j]=C00[i][j];
                    C[i][j+n/2]=C01[i][j];
                    C[i+n/2][j]=C10[i][j];
                    C[i+n/2][j+n/2]=C11[i][j];
                }
        }
    }
    static int[][] add(int A[][],int B[][],boolean addOrsub){
        int n = A.length;
        int C[][]=new int[n][n];
        for(int i=0 ; i<n ; i++)
            for(int j=0 ; j<n ; j++)
                if(addOrsub) C[i][j]= A[i][j]+B[i][j];
                else C[i][j]= A[i][j]-B[i][j];
        return C;
    }
}
