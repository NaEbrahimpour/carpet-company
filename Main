package com.company;
import java.awt.image.BufferedImage;
import java.awt.image.PixelGrabber;
import java.awt.image.Raster;
import java.io.File;
import javax.imageio.ImageIO;
import java.awt.*;
import java.io.IOException;
import javax.swing.*;
public class Carpet_company {
    public static void main(String args[]) throws IOException {
        File fileIn = new File("C:\\Users\\Mohammad Hossein\\Pictures\\flower.jpg");
        int [][] pix = new int[400][400];
        try
        {
            BufferedImage img= ImageIO.read(fileIn);
            Raster raster=img.getData();
            int w=raster.getWidth(),h=raster.getHeight();
            int pixels[][]=new int[w][h];
            for (int x=0;x<w;x++)
            {
                for(int y=0;y<h;y++)
                {
                    pixels[x][y]=raster.getSample(x,y,0);
                }
            }
            /*System.out.println(w );
            System.out.print(h );
            int k=0,m=0;
            for (int i=0;i<400;i++)
            {
                for(int j=0;j<400;j++)
                {
                    pix[i][j] = pixels[k][m];
                    m++;
                }
                k++;
            }*/
            for (int x=0;x<w;x++)
            {
                for(int y=0;y<h;y++)
                {
                    System.out.print(pixels[x][y]+" ");
                }
                System.out.println();
            }

        }
        catch (Exception e)
        {
            e.printStackTrace();
        }

    }
}



/*import java.awt.Image;
import java.awt.image.ImageObserver;
import java.awt.image.PixelGrabber;

public final class Util {
    /**
     * Converts a java.awt.Image into an array of pixels
     */
/*public static int[] convertToPixels(Image img) {
    int width = img.getWidth(null);
    int height = img.getHeight(null);
    int[] pixel = new int[width * height];

    PixelGrabber pg = new PixelGrabber(img, 0, 0, width, height, pixel, 0, width);
    try {
        pg.grabPixels();
    } catch (InterruptedException e) {
        throw new IllegalStateException("Error: Interrupted Waiting for Pixels");
    }
    if ((pg.getStatus() & ImageObserver.ABORT) != 0) {
        throw new IllegalStateException("Error: Image Fetch Aborted");
    }
    return pixel;
}
}*/
